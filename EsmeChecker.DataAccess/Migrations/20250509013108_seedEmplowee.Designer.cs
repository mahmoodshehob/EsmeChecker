// <auto-generated />
using System;
using EsmeChecker.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EsmeChecker.DataAccess.Migrations
{
    [DbContext(typeof(PostgreServerDbContext))]
    [Migration("20250509013108_seedEmplowee")]
    partial class seedEmplowee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("esmecheckerschema")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EsmeChecker.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories", "esmecheckerschema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 4, 26, 21, 6, 43, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "NSM"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 4, 26, 21, 6, 43, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("EsmeChecker.Entities.Emplowee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Postion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Emplowees", "esmecheckerschema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Email = "m.shehob@libyana.ly",
                            ModifyDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Msisdn = "218947776156",
                            Name = "Mahmood Shehob",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Email = "s.grada@libyana.ly",
                            ModifyDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Msisdn = "218947775684",
                            Name = "Said Grada",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Email = "s.grada@libyana.ly",
                            ModifyDate = new DateTime(2025, 4, 26, 21, 6, 50, 0, DateTimeKind.Utc),
                            Msisdn = "218947776081",
                            Name = "Ghada",
                            Postion = "vas Engineer"
                        });
                });

            modelBuilder.Entity("EsmeChecker.Entities.Emplowee", b =>
                {
                    b.HasOne("EsmeChecker.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
