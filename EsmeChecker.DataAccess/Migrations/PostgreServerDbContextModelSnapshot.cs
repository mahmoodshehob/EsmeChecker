// <auto-generated />
using System;
using EsmeChecker.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EsmeChecker.DataAccess.Migrations
{
    [DbContext(typeof(PostgreServerDbContext))]
    partial class PostgreServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("esmecheckerschema")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EsmeChecker.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Administration")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories", "esmecheckerschema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Administration = "Telecom",
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4025),
                            Department = "Network Service",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Unit = "VAS"
                        },
                        new
                        {
                            Id = 2,
                            Administration = "Commercial",
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4027),
                            Department = "Product Development",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Unit = "VAS"
                        });
                });

            modelBuilder.Entity("EsmeChecker.Entities.Emplowee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Allow")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Postion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Emplowees", "esmecheckerschema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allow = true,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4110),
                            Email = "m.shehob@libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947776156",
                            Name = "Mahmood Shehob",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 2,
                            Allow = false,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4112),
                            Email = "a.zeglam@libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947777544",
                            Name = "Aisha Zeglam",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 3,
                            Allow = true,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4113),
                            Email = "s.grada@libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947775684",
                            Name = "Said Grada",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 4,
                            Allow = true,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4114),
                            Email = "m.alshuhoumi@libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947775683",
                            Name = "Makhzoum Alshuhoumi",
                            Postion = "vas Engineer"
                        },
                        new
                        {
                            Id = 5,
                            Allow = true,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4116),
                            Email = "M.Elsharef@libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947777131",
                            Name = "Mohamed Elsharef",
                            Postion = "emplowee"
                        },
                        new
                        {
                            Id = 6,
                            Allow = true,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 5, 13, 1, 20, 8, 855, DateTimeKind.Utc).AddTicks(4117),
                            Email = "GHADAH.ALI@Libyana.ly",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Msisdn = "218947776081",
                            Name = "Ghada Ali",
                            Postion = "emplowee"
                        });
                });

            modelBuilder.Entity("EsmeChecker.Entities.MaxMinConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DayMax")
                        .HasColumnType("integer");

                    b.Property<int>("DayMin")
                        .HasColumnType("integer");

                    b.Property<int>("FixedHourMax")
                        .HasColumnType("integer");

                    b.Property<int>("FixedHourMin")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MaxMinConfigs", "esmecheckerschema");
                });

            modelBuilder.Entity("EsmeChecker.Entities.Emplowee", b =>
                {
                    b.HasOne("EsmeChecker.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
